version: 2

# default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
# trigger_map:
# - push_branch: nogpservices
#   workflow: nogpservices
# - push_branch: publish
#   workflow: publish
# - push_branch: "*"
#   workflow: primary

workflows:
  version: 2
  default:
    jobs:
      - primary
  publish:
    jobs:
      - primary
      - deploy:
          requires:
            - primary
          # filters:
          #   branches:
          #     only: master
              
# nogpservices:
#   jobs:
#     - nogpservices    

jobs:
  primary:
    docker:
      - image: mbgl/7d2403f42e:android-ndk-r16b
    working_directory: ~/code  
    environment:
      JVM_OPTS: -Xmx3200m
      BUILDTYPE: Debug
      IS_LOCAL_DEVELOPMENT: false
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Approve license for build tools
          command: (echo y; echo y; echo y; echo y; echo y; echo y) | $ANDROID_HOME/tools/bin/sdkmanager --licenses
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Export secrets for developer-config.xml
          command: |
              #!/bin/bash
              export MAPBOX_AUTH_FLOW_SECRET="$MAPBOX_AUTH_FLOW_SECRET"
              export SEGMENT_API_WRITE_KEY_DEMO="$SEGMENT_API_WRITE_KEY_DEMO"
              export SEGMENT_API_WRITE_KEY_WEARABLE_DEMO="$SEGMENT_API_WRITE_KEY_WEARABLE_DEMO"
      - run:
          name: Check code style
          command: make checkstyle
      - run:
          name: Configure Google Cloud SDK
          command: |
              #!/bin/bash
              # Install python tools for pip
              sudo apt-get install -y gcc python-dev python-setuptools
              sudo easy_install -U pip
              sudo pip uninstall crcmod
              sudo pip install -U crcmod

              # Install Google Cloud SDK for Firebase
              export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
              echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
              curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
              sudo apt-get update && sudo apt-get install google-cloud-sdk
      - run:
          name: Run Firebase instrumentation tests
          command: |
              #!/bin/bash
              echo "Build seperate test apk:"
              ./gradlew :MapboxAndroidDemo:assembleGpservicesDebug --continue

              # Get authentication secret
              echo "Downloading Google Cloud authentication:"
              wget -O secret.json "$BITRISEIO_FIREBASE_JSON_URL"

              echo "Run tests on firebase:"
              gcloud auth activate-service-account --key-file secret.json --project mapbox-android-demo
              gcloud firebase test android run --type robo --app MapboxAndroidDemo/build/outputs/apk/gpservices/debug/MapboxAndroidDemo-gpservices-debug.apk --device-ids shamu --os-version-ids 22 --locales en --orientations portrait --timeout 10m
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
  deploy:
      - run: 
          name: Publish apk to Play Store alpha track    
          command: ./gradlew publishApkRelease
      
# # ------------------------------------------------------------------------------
#   nogpservices:
#     steps:
#       - gradle-runner:
#           inputs:
#           - gradle_task: "$NO_GPS_GRADLE_TASK"
#       - sign-apk: {}
  